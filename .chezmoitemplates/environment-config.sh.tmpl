# XDG configuration
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"

# MySQL configuration
export MYSQL_HISTFILE="$XDG_STATE_HOME/mysql_history"

# Postgres configuration
export PSQLRC="$XDG_CONFIG_HOME/pg/psqlrc"
export PSQL_HISTORY="$XDG_STATE_HOME/psql_history"
export PGPASSFILE="$XDG_CONFIG_HOME/pg/pgpass"
export PGSERVICEFILE="$XDG_CONFIG_HOME/pg/pg_service.conf"

# SQLite configuration
export SQLITE_HISTORY=$XDG_STATE_HOME/sqlite_history

# GnuPG configuration
export GNUPGHOME="$XDG_DATA_HOME/gnupg"

# Platform.io configuration
export PLATFORMIO_CORE_DIR="$XDG_DATA_HOME/platform.io"

{{- if eq .toolchains.rust true }}
# Rust configuration
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export CARGO_HOME="$XDG_DATA_HOME/cargo"
{{- end }}

{{- if eq .toolchains.php true }}
# PHP configuration
export COMPOSER_HOME="$XDG_CONFIG_HOME/composer"
{{- end }}


{{- if eq .toolchains.node true }}
# Node configuration
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export NVM_DIR="$XDG_DATA_HOME/nvm"
export NPM_PACKAGES="$XDG_DATA_HOME/node_modules"
export VUE_CLI_CONFIG_PATH="$XDG_CONFIG_HOME/vue"
export NODE_REPL_HISTORY="$XDG_STATE_HOME/node_history"
{{- end }}
{{- if eq .toolchains.deno true }}
export DENO_INSTALL="$XDG_DATA_HOME/deno"
export DENO_INSTALL_ROOT="$XDG_DATA_HOME/bin"
{{- end }}

{{- if eq .toolchains.go true }}
# Go configuration
export GOPATH="$XDG_DATA_HOME/go"
{{- end }}

{{- if eq .toolchains.elixir true }}
# Elixir configuration
export MIX_HOME="$XDG_DATA_HOME/mix"
export HEX_HOME="$XDG_DATA_HOME/hex"
{{- end }}

# Docker configuration
{{- if not .wsl }}
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
{{- end }}
export COMPOSE_DOCKER_CLI_BUILD=1

{{- if eq .toolchains.kubernetes true }}
# Kubernetes configuration
export KREW_ROOT="$XDG_DATA_HOME/krew"
export PULUMI_HOME="$XDG_DATA_HOME/pulumi"
{{- end }}

# Shell configuration
export ZDOTDIR="${ZDOTDIR:-$XDG_CONFIG_HOME/zsh}"
export ZINIT_HOME="$XDG_DATA_HOME/zinit"
export HISTFILE="$XDG_STATE_HOME/zsh_history"

export LESSHISTFILE="$XDG_STATE_HOME/less_history"

# Github creds
export GITHUB_TOKEN={{ .github.token | quote }}
export GITHUB_USER={{ .github.name | quote }}

# SSH agent configuration
{{- if eq .sshagent "1password" }}
{{-     if eq .chezmoi.os "darwin" }}
export SSH_AUTH_SOCK="$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
{{-     end }}
{{-     if eq .chezmoi.os "linux" }}
{{-         if eq .wsl true }}
export SSH_AUTH_SOCK="$HOME/.ssh/agent.sock"
( 
  if ! ss -ax | grep -q "$SSH_AUTH_SOCK"; then
    rm -f "$SSH_AUTH_SOCK"
    setsid --fork socat \
      UNIX-LISTEN:$SSH_AUTH_SOCK,fork \
      EXEC:"\"/mnt/c/tools/wsl-ssh-agent/npiperelay.exe\" -ei -s //./pipe/openssh-ssh-agent",nofork
  fi
) >& /dev/null
{{-         else }}
export SSH_AUTH_SOCK="$HOME/.1password/agent.sock"
{{-         end }}
{{-     end }}
{{- end }}

{{/* vim: set filetype=zsh: */}}
