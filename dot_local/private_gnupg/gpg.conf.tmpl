##########
## BEHAVIOR
###########

# Don't show the greeting
no-greeting

# Disable inclusion of the version string in ASCII armored output.
no-emit-version

# Disable comment string in clear text signatures and ASCII armored messages.
no-comments

# Display long key IDs.
keyid-format long

# List all keys (or the specified ones) along with their fingerprints.
with-fingerprint

# Display the calculated validity of user IDs during key listings.
list-options show-uid-validity
verify-options show-uid-validity

{{ if (eq .chezmoi.os "darwin") -}}
# Try to use the GnuPG-Agent. With this option, GnuPG first tries to connect to
# the agent before it asks for a passphrase.
use-agent
{{- end }}

# Tell GnuPG that it's okay to get called by a program instead of a terminal
auto-key-retrieve

##########
# KEYSERVER
###########

# This is the server that --recv-keys, --send-keys, and --search-keys will
# communicate with to receive keys from, send keys to, and search for keys on.
keyserver hkps://hkps.pool.sks-keyservers.net

# When using --refresh-keys, if the key in question has a preferred keyserver
# URL, then disable use of that preferred keyserver to refresh the key from.
keyserver-options no-honor-keyserver-url include-revoked auto-key-retrieve

# Don't leak DNS, see https://trac.torproject.org/projects/tor/ticket/2846.
# gpg: keyserver option 'no-try-dns-srv' is unknown


######################
# ALGORITHM AND CIPHERS
#######################

# When verifying a signature made from a subkey, ensure that the cross
# certification "back signature" on the subkey is present and valid. This
# protects against a subtle attack against subkeys that can sign.
require-cross-certification

# List of personal digest preferences. When multiple digests are supported by
# all recipients, choose the strongest one.
personal-cipher-preferences AES256 AES192 AES CAST5

# List of personal digest preferences. When multiple ciphers are supported by
# all recipients, choose the strongest one.
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# Message digest algorithm used when signing a key.
cert-digest-algo SHA512

# This preference list is used for new keys and becomes the default for
# "setpref" in the edit menu.
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
default-key 89939941B1169B3A86C3A735A6F6DB7CB772F1A0

